<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="NONE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="4f9b8da9-47c0-4bb4-8231-17404f1c8e5b" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/assets/animations/info.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Dart File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="UPDATE_TYPE" value="REBASE" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;MaeAuliya&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/MaeAuliya/flutter-clean-architecture-tdd-template.git&quot;,
    &quot;accountId&quot;: &quot;37170297-4848-485b-a2f4-309fde1840cd&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="33DWEmDw5QQXRz6xTiFLpWMFRFY" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Flutter Test.Should be a class of [TemplateVersion] entity.executor": "Run",
    "Flutter Test.Should call the [AuthenticationRepository.openGithubUrl].executor": "Run",
    "Flutter Test.Should call the [TemplateRepository.getCurrentTemplateVersion].executor": "Run",
    "Flutter Test.Should complete successfully when launch calls with ExternalApplication Mode.executor": "Run",
    "Flutter Test.Should emit [GetCurrentTemplateVersionSuccess] when [GetCurrentTemplateVersionEvent] is added and return success.executor": "Run",
    "Flutter Test.Should throw [ServerException] when canLaunch return false.executor": "Run",
    "Flutter Test.Should throw [ServerException] when launch return false.executor": "Run",
    "Flutter Test.[GetCurrentTemplateVersion] usecase.executor": "Run",
    "Flutter Test.[OpenGithubUrl] usecase.executor": "Run",
    "Flutter Test.[SplashScreenMove] event handler.executor": "Run",
    "Flutter Test.sukses\\: canLaunch true \\u2192 launch dipanggil dengan mode externalApplication.executor": "Run",
    "Flutter Test.tests in get_current_template_version_test.dart.executor": "Run",
    "Flutter Test.tests in template_bloc_test.dart.executor": "Run",
    "Flutter Test.tests in template_data_source_test.dart.executor": "Run",
    "Flutter Test.tests in template_version_model_test.dart.executor": "Run",
    "Flutter.main.dart.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.cidr.known.project.marker": "true",
    "RunOnceActivity.git.unshallow": "true",
    "RunOnceActivity.readMode.enableVisualFormatting": "true",
    "cf.first.check.clang-format": "false",
    "cidr.known.project.marker": "true",
    "dart.analysis.tool.window.visible": "false",
    "git-widget-placeholder": "master",
    "io.flutter.reload.alreadyRun": "true",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "C:/Users/o-maisan.auliya/StudioProjects/flutter-clean-architecture-tdd-template/lib/src/features",
    "settings.editor.selected.configurable": "flutter.settings",
    "show.migrate.to.gradle.popup": "false"
  },
  "keyToStringList": {
    "com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File": [
      "JSON"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\o-maisan.auliya\StudioProjects\flutter-clean-architecture-tdd-template\lib\src\features" />
      <recent name="C:\Users\o-maisan.auliya\StudioProjects\flutter-clean-architecture-tdd-template\lib\src\core\modules" />
      <recent name="C:\Users\o-maisan.auliya\StudioProjects\flutter-clean-architecture-tdd-template\lib\src\features\navigation\presentation\widgets" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\o-maisan.auliya\StudioProjects\flutter-clean-architecture-tdd-template\lib\src\core\services\router" />
      <recent name="C:\Users\o-maisan.auliya\StudioProjects\flutter-clean-architecture-tdd-template\lib\src\core\services\dependency_injection" />
      <recent name="C:\Users\o-maisan.auliya\StudioProjects\flutter-clean-architecture-tdd-template\lib\src\core\services\api" />
      <recent name="C:\Users\o-maisan.auliya\StudioProjects\flutter-clean-architecture-tdd-template\test\features\template\domain\entity" />
    </key>
  </component>
  <component name="RunManager" selected="Flutter Test.tests in template_bloc_test.dart">
    <configuration name="main.dart" type="FlutterRunConfigurationType" factoryName="Flutter">
      <option name="additionalArgs" value="--dart-define-from-file=env.json" />
      <option name="filePath" value="$PROJECT_DIR$/lib/main.dart" />
      <method v="2" />
    </configuration>
    <configuration name="Should emit [GetCurrentTemplateVersionSuccess] when [GetCurrentTemplateVersionEvent] is added and return success" type="FlutterTestConfigType" factoryName="Flutter Test" temporary="true" nameIsGenerated="true">
      <option name="testName" value="Should emit [GetCurrentTemplateVersionSuccess] when [GetCurrentTemplateVersionEvent] is added and return success" />
      <option name="testFile" value="$PROJECT_DIR$/test/features/template/presentation/bloc/template_bloc_test.dart" />
      <option name="useRegexp" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="Should throw [ServerException] when launch return false" type="FlutterTestConfigType" factoryName="Flutter Test" temporary="true" nameIsGenerated="true">
      <option name="testName" value="Should throw [ServerException] when launch return false" />
      <option name="testFile" value="$PROJECT_DIR$/test/features/template/data/datasources/template_data_source_test.dart" />
      <option name="useRegexp" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="[SplashScreenMove] event handler" type="FlutterTestConfigType" factoryName="Flutter Test" temporary="true" nameIsGenerated="true">
      <option name="testName" value="[SplashScreenMove] event handler" />
      <option name="testFile" value="$PROJECT_DIR$/test/features/template/presentation/bloc/template_bloc_test.dart" />
      <option name="useRegexp" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="tests in template_bloc_test.dart" type="FlutterTestConfigType" factoryName="Flutter Test" temporary="true" nameIsGenerated="true">
      <option name="testFile" value="$PROJECT_DIR$/test/features/template/presentation/bloc/template_bloc_test.dart" />
      <option name="useRegexp" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="tests in template_data_source_test.dart" type="FlutterTestConfigType" factoryName="Flutter Test" temporary="true" nameIsGenerated="true">
      <option name="testFile" value="$PROJECT_DIR$/test/features/template/data/datasources/template_data_source_test.dart" />
      <option name="useRegexp" value="false" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Flutter Test.tests in template_bloc_test.dart" />
        <item itemvalue="Flutter Test.[SplashScreenMove] event handler" />
        <item itemvalue="Flutter Test.Should emit [GetCurrentTemplateVersionSuccess] when [GetCurrentTemplateVersionEvent] is added and return success" />
        <item itemvalue="Flutter Test.tests in template_data_source_test.dart" />
        <item itemvalue="Flutter Test.Should throw [ServerException] when launch return false" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="4f9b8da9-47c0-4bb4-8231-17404f1c8e5b" name="Changes" comment="" />
      <created>1758852015741</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1758852015741</updated>
    </task>
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="origin/master" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>